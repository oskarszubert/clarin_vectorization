var topa_title="Tunel SSH z PuTTY  #8211; na przykładzie postgreSQL"; var topa_link="http%3A%2F%2Ftomasz.topa.pl%2Ftunel-ssh-z-putty- na-przykladzie-postgresql.html"; Tunel SSH z PuTTY – na przykładzie postgreSQL    !-- google_ad_client = "pub-5199944487334506"; google_ad_slot = "4898454205"; google_ad_width = 234; google_ad_height = 60; //--                                               !-- google_ad_client = "ca-pub-5199944487334506"; google_ad_slot = "9221153712"; google_ad_width = 300; google_ad_height = 250; //--                                                       Wpis dedykowany mojej specjalności na studiach, szybki poradnik jak się połączyć z naszym serwerem postgreSQL za pomocą tunelu SSH. Ale zasada działania jest identyczna dla innych usług i serwerów, więc może się przyda też innym. Krok 1. Ściągamy klienta SSH. Koleżanki i koledzy, poznajcie PuTTY. Mały (zaledwie 412 KB, ponad 10 razy mniejszy niż Wasz SSH Secure Shell) prosty w obsłudze, niewymagający instalacji – idealny :) Łatwo go ściągnąć (wpisujemy „putty” w Google i wybieramy pierwszy wynik z brzegu. Zjeżdżamy niżej i ściągamy putty.exe: Już? No to zabieramy się za konfigurację połączenia.  Będziemy ustawiać połączenie dla domyślnego portu 5432. Najpierw sprawdźmy więc czy nic nam aktualnie nie nasłuchuje na tym porcie: menu start » uruchom » cmd.exe [enter] » netstat -a [enter]. Pojawi się lista otwartych portów. Jeśli nigdzie nie będzie linijki zawierającej coś pokroju nazwa_naszego_kompa:5432 to możemy kontynuuować. Jeśli coś już nadaje/nasłuchuje na tym porcie, sprawdźmy czy przypadkiem nie mamy uruchomionego lokalnego serwera albo nie śmiga nam w tle jakiś p2p – to może być Wasz problem z działaniem…  Wszystko gra? No to klikamy na ikonkę PuTTY i zaczynamy. Na dzień dobry wpisujemy adres serwera z którym chcemy się połączyć (w naszym przypadku: orka.am.gdynia.pl)  Następnie z lewej strony odszukujemy Connection » SSH » Tunnels i tam wypełniamy pola Source port (5432) i Destination (localhost:5432) po czym klikamy przycisk Add. W okienku „Forwarded ports” powyżej powinno pojawić się L5432 localhost:5432:  Jeśli to już mamy gotowe, klikamy OK i przez to łączymy się z serwerem. Zapewne pojawi się okienko pytające czy chcemy zaakceptować klucz… tak, ok. Teraz logujemy się na Orkę przy pomocy naszego loginu i hasła – tego samego, którego używamy do sprawera (no chyba, że ktoś sobie kiedyś zmienił poprzez passwd…)  Jeśli się zalogowaliśmy…  …to możemy zminimalizować okienko (ale nie zamykać!) i sprawdzić, czy tunel działa prawidłowo (menu start » uruchom » cmd.exe [enter] » netstat -a [enter] i szukamy TCP nazwa_naszego_kompa:5432 nazwa_naszego_kompa:0 NASŁUCHIWANIE)  I jak, działa? No to super. Włączamy w końcu pgAdmin III i konfigurujemy połączenie: Jakakolwiek nazwa Host: localhost Port: 5432 Serwisowa DB: nasz_login_na_orce Użytkownik: nasz_login_na_orce Hasło: hasło_do_bazy (WAŻNE! Chodzi o hasło DO BAZY DANYCH, NIE DO ORKI – to hasełko, które dostaliśmy na karteczce od mgr Rosickiej) No i to by było na tyle… Klikamy OK, pgAdmin powinien się po chwili połączyć z Orką, po kliknięciu na nazwę połączenia zobaczymy krzyżyk pozwalający nam rozwinąć listę i zobaczymy 150 baz dostępnych na serwerze…  Jeśli coś Wam dalej nie działa, sprawdźcie czy Wasz firewall nie blokuje programu PuTTY lub czy coś innego wcześniej nie działa na porcie 5432… To wszystko jest proste jak kilometr drutu w kieszeni, tu się nie da niczego zepsuć… Jeśli będą problemy, łapcie mnie na GG. Jutro będę miał lapka na uczelni, pokażę co i jak.  » Zobacz dodatkowe ilustracje do wpisu « Wpis opublikowany 3 marca 2008Tagi: everythingKategorie: Bez kategorii 