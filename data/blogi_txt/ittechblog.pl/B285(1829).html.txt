Łukasz Ładecki    Propagator myśli zorganizowanej, naczelny rządca, ojciec organizator. Prowadzi internetowe życie part time. Gadżeciarz, technologiczny freak, kocha open source i wszystko co da się rozkręcić. Mądrzy się na wiele tematów. Radzi, rządzi, a porankiem nazywa moment, w którym wstanie z łóżka. Szara eminencja. Social media flamethrower!   @priard   Email   Łukasz Ładecki, 10 kwietnia 2011, 10:26   1 Przyspieszamy Firefoxa 4 Od wydania Firefoxa 4.0 minęło już trochę czasu. Nowa wersja wprowadza wiele zmian, sama przeglądarka też znacznie przyspieszyła, ale czy to koniec możliwości tego przyspieszania? Wiele osób pamięta zapewne szeroko opisywane sztuczki z wirtualnymi dyskami trzymanymi w pamięci operacyjnej, tylko po to, by Firefox działał odrobinę szybciej. To samo później udało się zrobić bez przesadnych kombinacji z dodatkowym oprogramowaniem i całej masy przedziwnych modyfikacji. O cache w pamięci operacyjnej pisaliśmy już na łamach naszego bloga. Wtedy nie było jeszcze FF 4.0 i przyspieszenie przeglądarki po opisywanym wówczas zabiegu było znaczne. Co się okazuje, to rozwiązanie nadal jest aktualne i nadal, może już nie tak znacząco, ale jednak przyspiesza “ognistego liska”. Cała instrukcja (oprócz punktu 5) jest aktualna, więc po więcej szczegółów odsyłam do wpisu: http://ittechblog.pl/2010/11/12/przyspiesz-swojego-firefoxa- cache-w-pamieci-ram-bez-ramdisku/ Wspominany punkt 5, czyli: Ustaw wpisowi “browser.cache.memory.enable” wartość “true”.” można pominąć, ponieważ w FF 4 ta wartość jest domyślnie ustawiona na “true”. Firefox 4.0 odpalony na Ubuntu 11.04 (natty) - widok strony: about:config Inne modyfikacje: Jeżeli nasza sieć nie korzysta z IPv6, to warto wyłączyć poszukiwanie serwera DNS z wykorzystaniem tego protokołu. W about:config wyszukujemy dns i pierwsze na liście powinno się pokazać network.dns.disableIPv6 ustawiamy jej wartość na true (podwójne kliknięcie).  Kolejną modyfikacją jest skorzystanie z opcji network.http.pipelining, która w FF domyślnie jest wyłączona (o co chodzi?). W about:config wyszukujemy pipelining i pokaże nam się kilka wpisów: network.http.pipelining – usatawiamy wartość true (podwójne kliknięcie), network.http.pipelining.maxrequests – tu wpisujemy 8 (to jest maksymalna wartość), network.http.pipelining.ssl – ustawiamy wartość true (podwójne kliknięcie). Testowałem te ustawienia przez jakiś czas, wszystko działa bez zarzutu, sprawnie, a wzrost szybkości wczytywania stron jest zauważalny. Co tu dużo pisać, po prostu trzeba przekonać się samemu. Powodzenia. :) 